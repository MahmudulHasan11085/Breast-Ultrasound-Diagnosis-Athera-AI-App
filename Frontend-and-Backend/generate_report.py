from docx import Document
from docx.shared import Pt, Inches
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT
from datetime import datetime
from docx.oxml.ns import qn
from docx.oxml import OxmlElement
import os
class PatientReport:
    def __init__(self, patient_name, patient_id, image1, image2, age=None, gender=None):
        self.patient_name = patient_name
        self.patient_id = patient_id.replace('.png', '') if '.png' in patient_id else patient_id
        self.image1 = image1
        self.image2 = image2
        self.age = age
        self.gender = gender
        self.doc = Document()

    def generate_report(self):
        # Title
        title = self.doc.add_paragraph("PATIENT REPORT (AI)")
        title.alignment = 1
        title.runs[0].font.name = 'Book Antiqua'
        title.runs[0].font.size = Pt(16)
        title.runs[0].bold = True
        
        # Subtitle
        title2 = self.doc.add_paragraph("Breast Ultrasound Analysis: Pre-clinical Trial")
        title2.alignment = 1
        title2.runs[0].font.name = 'Book Antiqua'
        title2.runs[0].font.size = Pt(14)
        title2.runs[0].bold = True

        # Disclaimer
        disclaimer = self.doc.add_paragraph("Disclaimer")
        disclaimer.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT
        disclaimer.runs[0].font.name = 'Book Antiqua'
        disclaimer.runs[0].font.size = Pt(10)
        disclaimer.runs[0].bold = True
        disclaimer = self.doc.add_paragraph("The Breast Ultrasound Analysis system is in the pre-clinical trial phase and is intended for research purposes only. The system's predictions regarding breast lesions—classifying them as benign, malignant, or normal, segmenting lesions, providing BI-RADS scores, and suggesting follow-up recommendations—are based on radiology images. However, as it is not yet FDA-approved or certified by the relevant regulatory bodies in Bangladesh, the system should not be considered a definitive tool for medical diagnosis. It should not be used as a substitute for professional medical advice, diagnosis, or treatment. All results generated by the system must be reviewed by licensed healthcare providers before making any clinical decisions. The system's use must comply with all applicable medical laws, data protection, and privacy regulations in both Bangladesh and the United States.")
        disclaimer.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT
        disclaimer.runs[0].font.name = 'Book Antiqua'
        disclaimer.runs[0].font.size = Pt(8)
        disclaimer.runs[0].bold = False

        # New patient details title
        self.doc.add_paragraph("_________________________________________________________________________________________________________")
        title3 = self.doc.add_paragraph("Patient Information")
        title3.alignment = 1
        title3.runs[0].font.name = 'Times New Roman'
        title3.runs[0].font.size = Pt(12)
        title3.runs[0].bold = True
        self.doc.add_paragraph("_________________________________________________________________________________________________________")

        # Patient Info
        name = self.doc.add_paragraph(f"Name: {self.patient_name}						ID: {self.patient_id}")
        name.runs[0].font.name = 'Book Antiqua'
        name.runs[0].font.size = Pt(11)
        name.runs[0].bold = False
        name2 = self.doc.add_paragraph(f"Age: {self.age}							Gender: {self.gender}")
        name2.runs[0].font.name = 'Book Antiqua'
        name2.runs[0].font.size = Pt(11)
        name2.runs[0].bold = False
        self.doc.add_paragraph("_________________________________________________________________________________________________________")

        # Ultrasound Findings, Prediction & Diagnosis
        title4 = self.doc.add_paragraph("Ultrasound Findings, Prediction & Diagnosis")
        title4.alignment = 1
        title4.runs[0].font.name = 'Times New Roman'
        title4.runs[0].font.size = Pt(12)
        title4.runs[0].bold = True
        self.doc.add_paragraph("_________________________________________________________________________________________________________")

        # AI Model Prediction
        class_output = "benign"
        model = self.doc.add_paragraph(f"AI Model Prediction: {class_output}")
        model.runs[0].font.name = 'Book Antiqua'
        model.runs[0].font.size = Pt(11)
        model.runs[0].bold = False
        run = model.add_run()
        run.add_text("                                               ")
        run.add_picture(self.image1, width=Inches(1))  # Adjust the width as needed
        run.add_text(" ")
        run.add_picture(self.image2, width=Inches(1))  # Adjust the width as needed

        # BI-RADS Category
        birad_class_output = "3"
        model2 = self.doc.add_paragraph(f"BI-RADS Category: {birad_class_output} (Probably {class_output})")
        model2.runs[0].font.name = 'Book Antiqua'
        model2.runs[0].font.size = Pt(11)
        model2.runs[0].bold = False

        # Recommendation
        model3 = self.doc.add_paragraph(f"Recommendation: Follow-up ultrasound in 6 months")
        model3.runs[0].font.name = 'Book Antiqua'
        model3.runs[0].font.size = Pt(11)
        model3.runs[0].bold = False
        self.doc.add_paragraph("_________________________________________________________________________________________________________")
        # Attending AI Radiologist system
        model4 = self.doc.add_paragraph(f"Attending AI Radiologist system:")
        model4.runs[0].font.name = 'Book Antiqua'
        model4.runs[0].font.size = Pt(11)
        model4.runs[0].bold = True

        # System Information
        model5 = self.doc.add_paragraph(f"AI-Powered BUET Radiology System")
        model5.runs[0].font.name = 'Book Antiqua'
        model5.runs[0].font.size = Pt(11)
        model5.runs[0].bold = False
        
        # Date and Signed
        current_date = datetime.today().strftime('%B %d, %Y')
        model6 = self.doc.add_paragraph(f"Date: {current_date}")
        model6.runs[0].font.name = 'Book Antiqua'
        model6.runs[0].font.size = Pt(11)
        model6.runs[0].bold = False
        
        model7 = self.doc.add_paragraph(f"Signed: Aethera AI")	
        model7.runs[0].font.name = 'Book Antiqua'
        model7.runs[0].font.size = Pt(11)
        model7.runs[0].bold = False
        
        # Save Document
        reports_folder = 'reports'
        if not os.path.exists(reports_folder):
            os.makedirs(reports_folder)
        
        # Save Document in 'reports' folder
        report_path = os.path.join(reports_folder, f"{self.patient_name}_{self.patient_id}_Report.docx")
        self.doc.save(report_path)
        